name: test

on: [push, pull_request, workflow_dispatch]

jobs:

  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # run static analysis on bleeding and trailing edges
        python-version: [ '3.9', '3.11' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install --upgrade pip
          poetry install
      - name: Run Static Analysis
        run: |
          #poetry run pylint django_enum
          #poetry run doc8 -q doc
          poetry check
          poetry run pip check
          poetry run safety check --full-report


  postgres:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    env:
      LEARN_PYTHON_RDBMS: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    strategy:
      matrix:
        python-version: ['3.9', '3.11']
        postgres-version: ['12', 'latest']
        exclude:
          - postgres-version: '12'
            python-version: '3.11'
          - postgres-version: 'latest'
            python-version: '3.9'

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:${{ matrix.postgres-version }}
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install Basic Dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry run pip install --upgrade pip
        poetry install
    - name: No Optional Dependency Unit Tests
      run: |
        poetry run pytest
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  sqlite:
    runs-on: ubuntu-latest
    env:
        LEARN_PYTHON_RDBMS: sqlite
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install --upgrade pip
          poetry install
      - name: Run Full Unit Tests
        run: |
          poetry run pytest
